// --- Grammar for ValuaScript (FINAL WORKING VERSION) ---

start: config_block assignment* output_block

config_block: "@iterations" "=" SIGNED_NUMBER -> iterations_setting
output_block: "@output" "=" CNAME           -> output_setting

?assignment: "let" CNAME "=" expression -> assignment

// --- HIERARCHY FOR MATHEMATICAL EXPRESSIONS ---
// We now use named terminals for operators (ADD, SUB, etc.) so that the
// Transformer receives them as Tokens instead of discarding them.
?expression: term ((ADD|SUB) term)*         -> infix_expression
?term:       factor ((MUL|DIV) factor)*       -> infix_expression
?factor:     power
?power:      atom (POW atom)*            -> infix_expression

?atom: SIGNED_NUMBER
     | CNAME
     | function_call
     | vector
     | "(" expression ")"

// --- Reusable Rule Definitions ---
vector: "[" [arg ("," arg)*] "]"
function_call: CNAME "(" [arg ("," arg)*] ")"
?arg: expression

// --- Terminal Definitions ---

// By defining operators as named terminals, we ensure they are not discarded.
ADD: "+"
SUB: "-"
MUL: "*"
DIV: "/"
POW: "^"

%import common.CNAME
%import common.SIGNED_NUMBER
%ignore COMMENT
COMMENT: /#.*/
%import common.WS
%ignore WS