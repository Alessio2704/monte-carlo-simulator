{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "ValuaScript",
  "scopeName": "source.valuascript",
  "patterns": [
    { "include": "#comments" },
    { "include": "#directives" },
    { "include": "#keywords" },
    { "include": "#storage_types" },
    { "include": "#strings" },
    { "include": "#functions" },
    { "include": "#numbers" },
    { "include": "#operators" },
    { "include": "#punctuation" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        { "name": "comment.line.number-sign.valuascript", "match": "#.*$" }
      ]
    },
    "directives": {
      "patterns": [
        {
          "name": "keyword.control.directive.valuascript",
          "match": "@\\b(__DIRECTIVES__)\\b"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.other.valuascript",
          "match": "\\b(let)\\b"
        },
        {
          "name": "storage.type.function.valuascript",
          "match": "\\b(func)\\b"
        },
        {
          "name": "keyword.control.flow.valuascript",
          "match": "\\b(return)\\b"
        }
      ]
    },
    "storage_types": {
      "patterns": [
        {
          "name": "storage.type.valuascript",
          "match": "\\b(__TYPES__)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.valuascript",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.valuascript",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "support.function.built-in.valuascript",
          "match": "\\b(__FUNCTIONS__)\\b(?=\\s*\\()"
        },
        {
          "name": "entity.name.function.valuascript",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)(?=\\s*\\()"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.valuascript",
          "match": "\\b-?\\d+(_\\d+)*(\\.\\d+(_\\d+)*)?(?<!_)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        { "name": "keyword.operator.assignment.valuascript", "match": "=" },
        {
          "name": "keyword.operator.arithmetic.valuascript",
          "match": "[\\+\\-\\*\\/\\^]"
        },
        { "name": "keyword.operator.arrow.valuascript", "match": "->" }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "name": "punctuation.definition.brace.curly.begin.valuascript",
          "match": "\\{"
        },
        {
          "name": "punctuation.definition.brace.curly.end.valuascript",
          "match": "\\}"
        }
      ]
    }
  }
}
